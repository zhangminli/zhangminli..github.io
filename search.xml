<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Ubuntu18.04基础环境配置</title>
    <url>/2020/12/05/2018-12-5-Ubuntu18-04%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h3 id="1-设置静态ip与DNS"><a href="#1-设置静态ip与DNS" class="headerlink" title="1. 设置静态ip与DNS"></a>1. 设置静态ip与DNS</h3><ul>
<li><p>修改/etc/network/interfaces设置静态ip</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> gedit /etc/network/interfaces</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<a id="more"></a>

<p>​       修改如下：</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> interfaces(5) file used by ifup(8) and ifdown(8)</span></span><br><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line">auto enp5s0             # 网卡的名称要根据实际设置，有可能是enp1s0</span><br><span class="line">iface enp5s0 inet static</span><br><span class="line">address 172.16.62.237     # 根据实际需要设置231-239</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line">gateway 172.16.62.254</span><br></pre></td></tr></table></figure>
<p>​        重启网络服务：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> service networking restart</span></span><br></pre></td></tr></table></figure>

<ul>
<li>修改/etc/systemd/resolved.conf设置NDS</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> gedit /etc/systemd/resolved.conf</span></span><br></pre></td></tr></table></figure>

<p>​       修改如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[Resolve]</span><br><span class="line">DNS=114.114.114.114</span><br></pre></td></tr></table></figure>

<p>​        重启DNS服务：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> service systemd-resolved restart</span></span><br></pre></td></tr></table></figure>

<ul>
<li>3 设置hosts与hostname，并重启</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> gedit /etc/hosts</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> gedit /etc/hostname</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> reboot</span></span><br></pre></td></tr></table></figure>



<h4 id="2-更换国内apt源，并更新软件"><a href="#2-更换国内apt源，并更新软件" class="headerlink" title="2. 更换国内apt源，并更新软件"></a>2. 更换国内apt源，并更新软件</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> cp /etc/apt/sources.list /etc/apt/sources.list.backup</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> vi /etc/apt/sources.list</span></span><br></pre></td></tr></table></figure>

<p>​      阿里云源 <a href="https://developer.aliyun.com/mirror/ubuntu?spm=a2c6h.13651102.0.0.3e221b11nkzu7o">https://developer.aliyun.com/mirror/ubuntu?spm=a2c6h.13651102.0.0.3e221b11nkzu7o</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> apt-get update</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> apt-get upgrade</span></span><br></pre></td></tr></table></figure>



<h4 id="3、安装基础软件"><a href="#3、安装基础软件" class="headerlink" title="3、安装基础软件"></a>3、安装基础软件</h4><ul>
<li> vi不能正常使用上下左右方向键，卸载后重新安装vi/vim</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> apt-get remove vim-common</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> apt-get install -y vim</span></span><br></pre></td></tr></table></figure>



<ul>
<li>安装ip、ifconfig、ping、traceroute</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> apt-get install -y iproute2 net-tools iputils-ping traceroute</span></span><br></pre></td></tr></table></figure>

<ul>
<li>安装pip2、pip3，并更换国内源**</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> apt-get install -y python-pip python3-pip</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> mkdir ~/.pip</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> vim ~/.pip/pip.conf</span></span><br><span class="line"></span><br><span class="line">[global]  index-url = https://pypi.tuna.tsinghua.edu.cn/simple  extra-index-url =  https://mirrors.163.com/pypi/simple/     timeout = 60  </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> ln -s /usr/bin/pip2 /usr/bin/pip2.7</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> ln -s /usr/bin/pip3 /usr/bin/pip3.6</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> rm -f /usr/bin/pip</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> ln -s /usr/bin/pip3 /usr/bin/pip</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> rm -f /usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> ln -s /usr/bin/python3 /usr/bin/python</span></span><br></pre></td></tr></table></figure>

<ul>
<li>安装文件上传下载工具lrzsz、同步工具rsync</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> apt-get install -y lrzsz rsync</span></span><br></pre></td></tr></table></figure>

<ul>
<li>安装ssh-server，并配置</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> apt-get install -y openssh-server</span></span><br></pre></td></tr></table></figure>

<p>检查ssh-server是否启动：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ps -aux | grep sshd</span></span><br></pre></td></tr></table></figure>

<p>若未出现sshd结果，则执行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> service ssh start</span></span><br></pre></td></tr></table></figure>

<ul>
<li>安装发包工具、流量统计工具netperf、iperf、iftop、vnstat</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> apt-get install -y netperf iperf iftop vnstat</span></span><br></pre></td></tr></table></figure>

<ul>
<li>安装docker</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> apt-get install -y docker.io</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>OVS</tag>
      </tags>
  </entry>
  <entry>
    <title>OVS Tunnel Options</title>
    <url>/2020/12/06/2020-12-6-OVS-Tunnel-Options/</url>
    <content><![CDATA[<ul>
<li><p><strong>options: remote_ip</strong></p>
<p>String类型，远程隧道端口。必须是个单播地址ipv4或者ipv6，或者是一个关键词flow。如果设置成flow，即remote_ip=flow则flow这个动作(set_field)必须指定tun_dst或tun_ipv6_dst为远程隧道端口的IP。</p>
</li>
<li><p><strong>options: local_ip</strong></p>
<p>String类型，本地隧道端口。必须是个单播地址ipv4或者ipv6，或者是一个关键词flow。如果设置成flow，即local_ip=flow则flow这个动作(set_field)必须指定tun_src或者tun_ipv6_src为本地隧道端口的IP。</p>
<a id="more"></a>
</li>
<li><p><strong>options: in_key</strong></p>
<p>String类型，隧道接收的包，包的key值含以下三者之一：0，包中如果没有key或者这个key是0，则表示没有这个属性；一个确定的24bit(Geneve，VXLAN，LISP)，32bit（GRE），64bit（STT）数字，隧道会接收以上指定key的包；关键字flow，隧道会接收任意key的包，key会被替换成tun_id，并使用tun_id去匹配流表。</p>
</li>
<li><p><strong>options: out_key</strong></p>
<p>String类型，隧道发送的包，包的key值被设置为：0，包如果被设置为0，则发送的包不会带有该属性，等同于不设置改属性；一个确定的24bit(Geneve，VXLAN，LISP)，32bit（GRE），64bit（STT）数字，隧道发送的包会带上该key；关键字flow，隧道会设置key值。</p>
</li>
<li><p><strong>options: key</strong></p>
<p>String类型，如果in_key和out_key是同一数值，则可以合并为该属性。</p>
</li>
<li><p><strong>options: tos</strong></p>
<p>String类型，在封包的时候添加进ToS字段。</p>
</li>
<li><p><strong>options: ttl</strong></p>
<p>String类型，可以设置为inherit、数字、不设置，TTL字段会被设置在封装包中，该属性表示该包在路由前最大经过的网段数量。inherit表示从inner packet(必须要是ipv4或ipv6)中拷贝TTL字段，不设置则默认为64。</p>
</li>
<li><p><strong>options: df_default</strong></p>
<p>布尔类型，如果为true表示不分包bit会被设置在封装包头中，去让MTU发现。</p>
</li>
<li><p><strong>Tunnel Options: vxlan only</strong></p>
<ul>
<li><strong>options: exts</strong>—以逗号为分隔的vxlan扩展功能，目前支持的属性有：gbp，VXLAN-GBP允许传输一个包的组策略上下文在vxlan隧道中。具体详见<a href="https://tools.ietf.org/html/draft%E2%88%92smith%E2%88%92vxlan%E2%88%92group%E2%88%92policy">https://tools.ietf.org/html/draft%E2%88%92smith%E2%88%92vxlan%E2%88%92group%E2%88%92policy</a></li>
</ul>
</li>
<li><p><strong>Tunnel Options: gre, ipsec_gre, geneve, vxlan</strong></p>
<ul>
<li><strong>options: csum</strong> — String类型，只可能是True、False。在发包中计算封包头的校验，GRE默认支持，vxlan和geneve则需要kernel &gt; 4.0</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>OVS</category>
      </categories>
      <tags>
        <tag>OVS</tag>
      </tags>
  </entry>
  <entry>
    <title>DevStack(Stein版)安装说明</title>
    <url>/2020/12/05/2020-12-5-DevStack-Stein%E7%89%88-%E5%AE%89%E8%A3%85%E8%AF%B4%E6%98%8E/</url>
    <content><![CDATA[<h3 id="1-修改apt源"><a href="#1-修改apt源" class="headerlink" title="1. 修改apt源"></a>1. 修改apt源</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> cp /etc/apt/sources.list /etc/apt/sources.list.backup</span></span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> vim /etc/apt/sources.list</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> apt-get update</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> apt-get upgrade</span></span><br></pre></td></tr></table></figure>

<h3 id="2-配置pip源与Python"><a href="#2-配置pip源与Python" class="headerlink" title="2. 配置pip源与Python"></a>2. 配置pip源与Python</h3><p>（1）配置pip国内源</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> mkdir ~/.pip</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> vim ~/.pip/pip.conf</span></span><br><span class="line"></span><br><span class="line">[global]</span><br><span class="line">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">extra-index-url = https://mirrors.163.com/pypi/simple/</span><br><span class="line"></span><br><span class="line">timeout = 60</span><br></pre></td></tr></table></figure>

<p>（2）配置pip默认为pip3，Python默认为Python3</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ln -s /usr/bin/pip2 /usr/bin/pip2.7</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ln -s /usr/bin/pip3 /usr/bin/pip3.6</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> rm -f /usr/bin/pip</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ln -s /usr/bin/pip3 /usr/bin/pip</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> rm -f /usr/bin/python</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ln -s /usr/bin/python3 /usr/bin/python</span></span><br></pre></td></tr></table></figure>

<h3 id="3-准备devstack安装"><a href="#3-准备devstack安装" class="headerlink" title="3. 准备devstack安装"></a>3. 准备devstack安装</h3><h4 id="（1）clone-devstack代码（Stein版）"><a href="#（1）clone-devstack代码（Stein版）" class="headerlink" title="（1）clone devstack代码（Stein版）"></a>（1）clone devstack代码（Stein版）</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> git <span class="built_in">clone</span> http://git.trystack.cn/openstack-dev/devstack -b stable/stein</span></span><br></pre></td></tr></table></figure>

<h4 id="（2）创建stack账户"><a href="#（2）创建stack账户" class="headerlink" title="（2）创建stack账户"></a>（2）创建stack账户</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> devstack/tools/create-stack-user.sh</span></span><br></pre></td></tr></table></figure>

<h4 id="（3）移动代码（同后续安装目标目录放在一起）"><a href="#（3）移动代码（同后续安装目标目录放在一起）" class="headerlink" title="（3）移动代码（同后续安装目标目录放在一起）"></a>（3）移动代码（同后续安装目标目录放在一起）</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> mv devstack /opt/stack</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> chown -R stack:stack /opt/stack/devstack</span></span><br></pre></td></tr></table></figure>

<h4 id="（4）切换到-stack-用户"><a href="#（4）切换到-stack-用户" class="headerlink" title="（4）切换到 stack 用户"></a>（4）切换到 stack 用户</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> su - stack</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">cd</span> devstack</span></span><br></pre></td></tr></table></figure>

<h4 id="（5）对于stack账户的pip，再次执行步骤2"><a href="#（5）对于stack账户的pip，再次执行步骤2" class="headerlink" title="（5）对于stack账户的pip，再次执行步骤2"></a>（5）对于stack账户的pip，再次执行步骤2</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> mkdir ~/.pip</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> vim ~/.pip/pip.conf</span></span><br><span class="line"></span><br><span class="line">[global]</span><br><span class="line">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">extra-index-url = https://mirrors.163.com/pypi/simple/</span><br><span class="line"></span><br><span class="line">timeout = 60</span><br></pre></td></tr></table></figure>


<h3 id="4-控制节点安装"><a href="#4-控制节点安装" class="headerlink" title="4. 控制节点安装"></a>4. 控制节点安装</h3><h4 id="4-1-安装控制节点，编辑local-conf"><a href="#4-1-安装控制节点，编辑local-conf" class="headerlink" title="4. 1 安装控制节点，编辑local.conf"></a>4. 1 安装控制节点，编辑local.conf</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">stack@controller:~/devstack$ vim local.conf</span><br></pre></td></tr></table></figure>

<p>控制节点（ip与网卡名根据实际设置）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[[local|localrc]]</span><br><span class="line"><span class="meta">#</span><span class="bash">---------------common section even some node role may not use this setting</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> use TryStack git mirror</span></span><br><span class="line"></span><br><span class="line">GIT_BASE=http://git.trystack.cn</span><br><span class="line">NOVNC_REPO=http://git.trystack.cn/kanaka/noVNC.git</span><br><span class="line">SPICE_REPO=http://git.trystack.cn/git/spice/spice-html5.git</span><br><span class="line"><span class="meta">#</span><span class="bash">LIBVIRT_TYPE=kvm</span></span><br><span class="line"></span><br><span class="line">DEST=/opt/stack</span><br><span class="line">LOGFILE=$DEST/logs/stack.sh.log</span><br><span class="line">VERBOSE=True</span><br><span class="line">LOGDAYS=1</span><br><span class="line">LOG_COLOR=True</span><br><span class="line">RECLONE=false</span><br><span class="line">PIP_UPGRADE=Flase</span><br><span class="line">DOWNLOAD_DEFAULT_IMAGES=False</span><br><span class="line">IMAGE_URLS=&quot;http://download.cirros-cloud.net/0.4.0/cirros-0.4.0-x86_64-disk.img&quot;</span><br><span class="line">IP_VERSION=4</span><br><span class="line">SERVICE_IP_VERSION=4</span><br><span class="line">ENABLE_IDENTITY_V2=False</span><br><span class="line"></span><br><span class="line">DATABASE_TYPE=mysql</span><br><span class="line"></span><br><span class="line">SERVICE_HOST=控制节点的ip地址</span><br><span class="line">MYSQL_HOST=$SERVICE_HOST</span><br><span class="line">RABBIT_HOST=$SERVICE_HOST</span><br><span class="line">GLANCE_HOSTPORT=$SERVICE_HOST:9292</span><br><span class="line">ADMIN_PASSWORD=admin</span><br><span class="line">MYSQL_PASSWORD=admin</span><br><span class="line">RABBIT_PASSWORD=admin</span><br><span class="line">SERVICE_PASSWORD=admin</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Neutron options</span></span><br><span class="line"></span><br><span class="line">NEUTRON_CREATE_INITIAL_NETWORKS=False</span><br><span class="line"></span><br><span class="line">MULTI_HOST=1</span><br><span class="line"></span><br><span class="line">USE_PYTHON3=True</span><br><span class="line"></span><br><span class="line">enable_service placement-api </span><br><span class="line">enable_service placement-client</span><br><span class="line">disable_service etcd3 </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">---------------node special section</span></span><br><span class="line">HOST_IP=控制节点的ip地址</span><br><span class="line">FLAT_INTERFACE=enp5s0（网卡名）</span><br><span class="line"><span class="meta">#</span><span class="bash">RECLONE=True</span></span><br><span class="line"><span class="meta">#</span><span class="bash">enable_plugin octavia https://opendev.org/openstack/octavia stable/stein</span></span><br><span class="line"><span class="meta">#</span><span class="bash">enable_plugin octavia http://git.trystack.cn/openstack/octavia stable/stein</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">disable_service n-cpu q-agt n-api-meta c-vol n-net</span></span><br><span class="line">disable_service n-cpu c-vol</span><br><span class="line">enable_service q-fwaas,q-vpn</span><br><span class="line">enable_service q-lbaasv2,octavia,o-cw,o-hk,o-hm,o-api</span><br></pre></td></tr></table></figure>



<h4 id="4-2-控制节点上，修改脚本"><a href="#4-2-控制节点上，修改脚本" class="headerlink" title="4. 2 控制节点上，修改脚本"></a>4. 2 控制节点上，修改脚本</h4><h5 id="（1）修改tools-install-pip-sh"><a href="#（1）修改tools-install-pip-sh" class="headerlink" title="（1）修改tools/install_pip.sh"></a>（1）修改tools/install_pip.sh</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> vim /opt/stack/devstack/tools/install_pip.sh</span></span><br></pre></td></tr></table></figure>

<p>注释掉135-140行</p>
<h5 id="（2）修改lib-apache"><a href="#（2）修改lib-apache" class="headerlink" title="（2）修改lib/apache"></a>（2）修改lib/apache</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> vim /opt/stack/devstack/lib/apache</span></span><br></pre></td></tr></table></figure>

<p>第98行改为  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">uwsgi=$(ls uWSGI*)</span><br></pre></td></tr></table></figure>

<p>第99行改为   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> mkdir uwsgi &amp; tar xvf <span class="variable">$uwsgi</span> -C uwsgi</span></span><br></pre></td></tr></table></figure>

<h5 id="（3）修改lib-tempest"><a href="#（3）修改lib-tempest" class="headerlink" title="（3）修改lib/tempest"></a>（3）修改lib/tempest</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> vim /opt/stack/devstack/lib/tempest</span></span><br></pre></td></tr></table></figure>

<p>第110行改为python3的写法：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo $size | python -c &quot;import math; print(int(math.ceil(float(int(input()) / 1024.0 ** 3))))&quot;</span><br></pre></td></tr></table></figure>

<h4 id="4-3-控制节点上，执行denstack安装脚本"><a href="#4-3-控制节点上，执行denstack安装脚本" class="headerlink" title="4. 3 控制节点上，执行denstack安装脚本"></a>4. 3 控制节点上，执行denstack安装脚本</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># FORCE&#x3D;yes .&#x2F;stack.sh</span><br></pre></td></tr></table></figure>

<h4 id="4-4、控制节点上，报错后的一些操作"><a href="#4-4、控制节点上，报错后的一些操作" class="headerlink" title="4. 4、控制节点上，报错后的一些操作"></a>4. 4、控制节点上，报错后的一些操作</h4><p>   每次报错后都要先执行 ./unstack.sh<br>   再执行步骤4-3</p>
<h5 id="（1）如果os-testr-1-0-0安装卡住，则可以人工安装os-testr-2-0-0"><a href="#（1）如果os-testr-1-0-0安装卡住，则可以人工安装os-testr-2-0-0" class="headerlink" title="（1）如果os-testr===1.0.0安装卡住，则可以人工安装os-testr===2.0.0"></a>（1）如果os-testr===1.0.0安装卡住，则可以人工安装os-testr===2.0.0</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#pip install os-testr&#x3D;&#x3D;2.0.0</span><br></pre></td></tr></table></figure>

<p>若无法解决，就直接改upper-constraints.txt文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># vim &#x2F;opt&#x2F;stack&#x2F;requirements&#x2F;upper-constraints.txt</span><br></pre></td></tr></table></figure>

<p>第438行改为   os-testr===2.0.0</p>
<h5 id="（2）nova-py文件报错，novaclient-v2库中没有list-extensions函数，"><a href="#（2）nova-py文件报错，novaclient-v2库中没有list-extensions函数，" class="headerlink" title="（2）nova.py文件报错，novaclient.v2库中没有list_extensions函数，"></a>（2）nova.py文件报错，novaclient.v2库中没有list_extensions函数，</h5><p>修改horizon/openstack_dashboard/api/nova.py</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> rm /opt/stack/horizon/openstack_dashboard/api/nova.py</span></span><br></pre></td></tr></table></figure>

<p>将上述nova.py文件替换为下面网址里的文件<br><a href="https://opendev.org/openstack/horizon/src/commit/b148c9207580731863e4dc49771e132a8c31edbc/openstack_dashboard/api/nova.py">https://opendev.org/openstack/horizon/src/commit/b148c9207580731863e4dc49771e132a8c31edbc/openstack_dashboard/api/nova.py</a><br>也可以用wget直接下载，下载链接如下：<br><a href="https://opendev.org/openstack/horizon/raw/commit/b148c9207580731863e4dc49771e132a8c31edbc/openstack_dashboard/api/nova.py">https://opendev.org/openstack/horizon/raw/commit/b148c9207580731863e4dc49771e132a8c31edbc/openstack_dashboard/api/nova.py</a></p>
<h5 id="（3）oslo-privsep-daemon-FailedToDropPrivileges-privsep-helper-command-exited-non-zero"><a href="#（3）oslo-privsep-daemon-FailedToDropPrivileges-privsep-helper-command-exited-non-zero" class="headerlink" title="（3）oslo_privsep.daemon.FailedToDropPrivileges: privsep helper command exited non-zero"></a>（3）oslo_privsep.daemon.FailedToDropPrivileges: privsep helper command exited non-zero</h5><p>修改/usr/local/bin/privsep-helper</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># vim &#x2F;usr&#x2F;local&#x2F;bin&#x2F;privsep-helper</span><br></pre></td></tr></table></figure>

<p>sys.exit(helper_main())   改为 sys.exit(0)</p>
<h5 id="（4）如果cirros-0-4-0-x86-64-disk-img下载卡住，可以浏览器下载，再放入对应目录"><a href="#（4）如果cirros-0-4-0-x86-64-disk-img下载卡住，可以浏览器下载，再放入对应目录" class="headerlink" title="（4）如果cirros-0.4.0-x86_64-disk.img下载卡住，可以浏览器下载，再放入对应目录"></a>（4）如果cirros-0.4.0-x86_64-disk.img下载卡住，可以浏览器下载，再放入对应目录</h5><p>下载链接复制到浏览器   <a href="http://download.cirros-cloud.net/0.4.0/cirros-0.4.0-x86_64-disk.img">http://download.cirros-cloud.net/0.4.0/cirros-0.4.0-x86_64-disk.img</a><br>把下载好的镜像文件传到服务器，再放入对应目录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># mv cirros-0.4.0-x86_64-disk.img &#x2F;opt&#x2F;stack&#x2F;devstack&#x2F;files&#x2F;</span><br></pre></td></tr></table></figure>

<h5 id="（5）若git某个模块卡住，则可以手工git-clone"><a href="#（5）若git某个模块卡住，则可以手工git-clone" class="headerlink" title="（5）若git某个模块卡住，则可以手工git clone"></a>（5）若git某个模块卡住，则可以手工git clone</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># git clone http:&#x2F;&#x2F;git.trystack.cn&#x2F;openstack&#x2F;neutron &#x2F;opt&#x2F;stack&#x2F;neutron -b stable&#x2F;stein</span><br></pre></td></tr></table></figure>



<h4 id="4-5-控制节点安装结束后的输出"><a href="#4-5-控制节点安装结束后的输出" class="headerlink" title="4. 5 控制节点安装结束后的输出"></a>4. 5 控制节点安装结束后的输出</h4><p>执行 # ./run_tests.sh 进行各项服务的测试</p>
<p>执行 # openstack user list ，若出现 Missing value auth-url required for auth plugin password<br>则执行 # source openrc admin admin</p>
<h4 id="4-6-控制节点安装结束后登录OpenStack-web界面，账号密码均为-admin"><a href="#4-6-控制节点安装结束后登录OpenStack-web界面，账号密码均为-admin" class="headerlink" title="4. 6 控制节点安装结束后登录OpenStack web界面，账号密码均为 admin"></a>4. 6 控制节点安装结束后登录OpenStack web界面，账号密码均为 admin</h4><p>   <a href="http://172.16.62.229/dashboard/auth/login/">http://172.16.62.229/dashboard/auth/login/</a></p>
<p>若侧边栏：管理员/计算/实例 报错，则检查nova日志</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># journalctl -f --unit devstack@n-api.service</span><br></pre></td></tr></table></figure>

<p>报错：oslo.messaging._drivers.impl_rabbit [-] AMQP server on 172.16.62.229 is unreachable: [Errno 104] Connection reset by peer.<br>rabbitmq添加用户</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> rabbitmqctl add_user admin admin</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> rabbitmqctl set_permissions -p / admin <span class="string">&quot;.&quot;</span> <span class="string">&quot;.&quot;</span> <span class="string">&quot;.*&quot;</span> ;</span> </span><br><span class="line"><span class="meta">#</span><span class="bash"> rabbitmqctl set_user_tags admin administrator;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> service rabbitmq-server restart</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> rabbitmqctl list_users</span></span><br></pre></td></tr></table></figure>

<h3 id="5-计算节点安装"><a href="#5-计算节点安装" class="headerlink" title="5. 计算节点安装"></a>5. 计算节点安装</h3><h4 id="5-1-安装计算节点，编辑local-conf"><a href="#5-1-安装计算节点，编辑local-conf" class="headerlink" title="5.1 安装计算节点，编辑local.conf"></a>5.1 安装计算节点，编辑local.conf</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> stack@computer1:~/devstack$ vim local.conf</span></span><br></pre></td></tr></table></figure>

<p>计算节点（ip与网卡名根据实际设置）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[[local|localrc]]</span><br><span class="line"><span class="meta">#</span><span class="bash">---------------common section even some node role may not use this setting</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> use TryStack git mirror</span></span><br><span class="line"></span><br><span class="line">GIT_BASE=http://git.trystack.cn</span><br><span class="line">NOVNC_REPO=http://git.trystack.cn/kanaka/noVNC.git</span><br><span class="line">SPICE_REPO=http://git.trystack.cn/git/spice/spice-html5.git</span><br><span class="line"><span class="meta">#</span><span class="bash">LIBVIRT_TYPE=kvm</span>	</span><br><span class="line"></span><br><span class="line">DEST=/opt/stack</span><br><span class="line">LOGFILE=$DEST/logs/stack.sh.log</span><br><span class="line">VERBOSE=True</span><br><span class="line">LOGDAYS=1</span><br><span class="line">LOG_COLOR=True</span><br><span class="line">RECLONE=false</span><br><span class="line">PIP_UPGRADE=Flase</span><br><span class="line">DOWNLOAD_DEFAULT_IMAGES=False</span><br><span class="line">IMAGE_URLS=&quot;http://download.cirros-cloud.net/0.4.0/cirros-0.4.0-x86_64-disk.img&quot;</span><br><span class="line">IP_VERSION=4</span><br><span class="line">SERVICE_IP_VERSION=4</span><br><span class="line">ENABLE_IDENTITY_V2=False</span><br><span class="line"></span><br><span class="line">DATABASE_TYPE=mysql</span><br><span class="line"></span><br><span class="line">SERVICE_HOST=控制结点的ip地址</span><br><span class="line">MYSQL_HOST=$SERVICE_HOST</span><br><span class="line">RABBIT_HOST=$SERVICE_HOST</span><br><span class="line">GLANCE_HOSTPORT=$SERVICE_HOST:9292</span><br><span class="line">ADMIN_PASSWORD=admin</span><br><span class="line">MYSQL_PASSWORD=admin</span><br><span class="line">RABBIT_PASSWORD=admin</span><br><span class="line">SERVICE_PASSWORD=admin</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Neutron options</span></span><br><span class="line"></span><br><span class="line">NEUTRON_CREATE_INITIAL_NETWORKS=False</span><br><span class="line"></span><br><span class="line">MULTI_HOST=1</span><br><span class="line"></span><br><span class="line">USE_PYTHON3=True</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">---------------compute node common section</span></span><br><span class="line">ENABLED_SERVICES=n-cpu,q-agt,n-api-meta,placement-client,n-novnc</span><br><span class="line"></span><br><span class="line">NOVA_VNC_ENABLED=True</span><br><span class="line">NOVNCPROXY_URL=&quot;http://$SERVICE_HOST:6080/vnc_auto.html&quot;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">---------------compute node special section</span></span><br><span class="line">HOST_IP=计算结点ip地址</span><br><span class="line">FLAT_INTERFACE=enp5s0（本机网卡名）</span><br><span class="line">VNCSERVER_PROXYCLIENT_ADDRESS=$HOST_IP</span><br><span class="line">VNCSERVER_LISTEN=$HOST_IP</span><br><span class="line"><span class="meta">#</span><span class="bash">ENABLED_SERVICES+=,c-vol</span></span><br></pre></td></tr></table></figure>



<h4 id="5-2、计算节点上，修改脚本，同4-2"><a href="#5-2、计算节点上，修改脚本，同4-2" class="headerlink" title="5. 2、计算节点上，修改脚本，同4-2"></a>5. 2、计算节点上，修改脚本，同4-2</h4><h4 id="5-3、计算节点上，执行denstack安装脚本"><a href="#5-3、计算节点上，执行denstack安装脚本" class="headerlink" title="5. 3、计算节点上，执行denstack安装脚本"></a>5. 3、计算节点上，执行denstack安装脚本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> FORCE=yes ./stack.sh</span></span><br></pre></td></tr></table></figure>

<h4 id="5-4、计算节点上，报错后的一些操作"><a href="#5-4、计算节点上，报错后的一些操作" class="headerlink" title="5. 4、计算节点上，报错后的一些操作"></a>5. 4、计算节点上，报错后的一些操作</h4><p>   每次报错后都要先执行 ./unstack.sh<br>   再执行步骤5-3<br>   具体操作同4-4，一般只会遇到4-4-(1)、(3)的报错，git clone和安装时的网络环境有关</p>
<h4 id="5-5、计算节点安装结束后的输出"><a href="#5-5、计算节点安装结束后的输出" class="headerlink" title="5. 5、计算节点安装结束后的输出"></a>5. 5、计算节点安装结束后的输出</h4><p>执行 # ./run_tests.sh 进行各项服务的测试</p>
<p>执行 # openstack user list ，若出现 Missing value auth-url required for auth plugin password<br>则执行 # source openrc admin admin</p>
<h4 id="5-6、让计算节点注册，在控制节点上运行"><a href="#5-6、让计算节点注册，在控制节点上运行" class="headerlink" title="5. 6、让计算节点注册，在控制节点上运行"></a>5. 6、让计算节点注册，在控制节点上运行</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">stack@controller:~/devstack$ /opt/stack/devstack/tools/discover_hosts.sh</span><br></pre></td></tr></table></figure>

<h4 id="5-7、计算节点安装结束后登录OpenStack-web界面，账号密码均为-admin格式为"><a href="#5-7、计算节点安装结束后登录OpenStack-web界面，账号密码均为-admin格式为" class="headerlink" title="5. 7、计算节点安装结束后登录OpenStack web界面，账号密码均为 admin格式为"></a>5. 7、计算节点安装结束后登录OpenStack web界面，账号密码均为 admin格式为</h4><p>http://控制结点ip地址/dashboard/auth/login/</p>
<p>例如：<a href="http://172.16.62.229/dashboard/auth/login/">http://172.16.62.229/dashboard/auth/login/</a></p>
<p>侧边栏：管理员/计算/虚拟机管理器，可以看到新增的计算节点<br>http://控制结点ip地址/dashboard/admin/hypervisors/</p>
]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>OpenStack</tag>
      </tags>
  </entry>
</search>
